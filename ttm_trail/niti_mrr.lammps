# MD simulation of EDM on NiTi (Nitinol) with Two-Temperature Model
# REDUCED VERSION FOR TESTING ON GTX 1650

# --- Variables and parameters (REDUCED) ---
variable        temp equal 300.0       # Initial temperature (K)
variable        seed equal 12345       # Random seed
variable        discharge_time equal 0.002   # Reduced discharge time (ns) - was 0.01
variable        total_time equal 0.01   # Reduced total time (ns) - was 0.05
variable        timestep equal 0.001   # Timestep (ps)
variable        thermo_freq equal 50   # Increased output frequency - was 20

# Gaussian heat source parameters
variable        power_density equal 1.4   # Power density (GeV/ps)
variable        heat_width equal 10       # Width of heating area (nm)
variable        heat_height equal 5       # Height of heating area (nm)
variable        k_factor equal 0.01       # Heat source concentration factor

# Convert discharge and total time to timesteps
variable        discharge_steps equal ${discharge_time}*1000000*${timestep}
variable        total_steps equal ${total_time}*1000000*${timestep}

# --- Initialization ---
units           metal
dimension       3
# Use periodic boundaries in all directions during minimization
boundary        p p p          # Changed from p p f to avoid lost atoms
atom_style      atomic

# --- Create lattice and simulation box (REDUCED SIZE) ---
variable        x_size equal 50         # Reduced from 100
variable        y_size equal 30         # Reduced from 50
variable        z_size equal 5

# Create NiTi B2 structure (ordered BCC structure like CsCl)
lattice         custom 3.01 &
                a1 1.0 0.0 0.0 &
                a2 0.0 1.0 0.0 &
                a3 0.0 0.0 1.0 &
                basis 0.0 0.0 0.0 &
                basis 0.5 0.5 0.5

region          box block 0 ${x_size} 0 ${y_size} 0 ${z_size}
create_box      2 box

# --- Define masses for atom types ---
mass            1 58.6934  # Mass of Ni (amu)
mass            2 47.867   # Mass of Ti (amu)

# --- Define Interatomic Potential ---
pair_style      eam/fs/kk
pair_coeff      * * /home/rimuru/workspace/ttm_trail/Ni-Ti.eam.fs Ni Ti

create_atoms    1 box basis 1 1    # Type 1 = Ni atoms at (0,0,0)
create_atoms    2 box basis 2 2    # Type 2 = Ti atoms at (0.5,0.5,0.5)

# --- Use a smaller overlap distance for deletion ---
delete_atoms overlap 1.0 all all # Reduced from 1.3 to avoid excessive deletion

# --- Define regions ---
region          fixed_region block 0 ${x_size} 0 8 0 ${z_size}  # Reduced from 15
group           fixed_atoms region fixed_region

region          thermo_region block 0 ${x_size} 8 20 0 ${z_size} # Reduced from 35
group           thermo_atoms region thermo_region

group           newtonian subtract all fixed_atoms thermo_atoms

variable        center_x equal ${x_size}/2
variable        center_y equal ${y_size}/2
variable        heat_width_half equal ${heat_width}*10/2
variable        heat_height_half equal ${heat_height}*10/2

variable        x1 equal ${center_x}-${heat_width_half}
variable        x2 equal ${center_x}+${heat_width_half}
variable        y1 equal ${center_y}-${heat_height_half}
variable        y2 equal ${center_y}+${heat_height_half}

region          heat_region block ${x1} ${x2} ${y1} ${y2} 0 ${z_size}
group           heat_atoms region heat_region

# --- Setup minimization with careful approach ---
run             0 post no

# More frequent neighbor list updates
neigh_modify delay 0 every 1 check yes

# --- REDUCED MINIMIZATION SEQUENCE ---
# First minimize with fixed box to resolve overlaps
fix             1 all nve/limit 0.01
minimize        1.0e-3 1.0e-3 500 5000  # Reduced iterations and increased tolerance
unfix           1

# Then relax box dimensions with reduced vmax
fix             1 all box/relax x 0.0 y 0.0 vmax 0.0001
minimize        1.0e-3 1.0e-3 500 5000  # Reduced iterations and increased tolerance
unfix           1

# --- Switch to fixed Z boundary after minimization ---
change_box      all boundary p p f

# --- Initialize velocities AFTER minimization ---
velocity        all create ${temp} ${seed} dist gaussian

# --- TTM Settings with NiTi-specific parameters (REDUCED GRID) ---
variable        nxgrid equal 4        # Reduced from 5
variable        nygrid equal 2        # Reduced from 3
variable        nzgrid equal 1

# TTM parameters for NiTi (adjusted based on paper recommendations)
variable        el_heat_cap equal 3.5e-7     # Electronic specific heat (eV/Å³/K)
variable        el_cond equal 6.8e-10        # Electronic thermal conductivity (eV/ps/Å/K)
variable        el_ph_coup equal 1.2e-10     # Electron-phonon coupling (eV/ps/Å³/K)
variable        el_temp equal 300.0          # Initial electronic temperature (K)

# Define 3D grid for TTM
fix             ttm all ttm ${nxgrid} ${nygrid} ${nzgrid} &
                ${el_temp} ${el_heat_cap} ${el_cond} ${el_ph_coup}

# --- Fixes and computes ---
fix             fixed fixed_atoms setforce/kk 0.0 0.0 0.0
fix             thermostat thermo_atoms nvt/kk temp ${temp} ${temp} 0.1
fix             integrate newtonian nve/kk

# Compute temperature for different groups with Kokkos acceleration
compute         temp_all all temp/kk
compute         temp_newtonian newtonian temp/kk
compute         temp_heat heat_atoms temp/kk

# Centro-symmetry parameter for defect analysis with Kokkos acceleration
compute         csp all centro/atom/kk 8

# --- Output settings (REDUCED FREQUENCY) ---
thermo          ${thermo_freq}
thermo_style    custom step time temp c_temp_newtonian c_temp_heat

# Dump trajectory for visualization - FURTHER REDUCED frequency
dump            1 all custom 5000 dump.nitinol.*.lammpstrj &
                id type x y z c_csp

# --- Simulation run ---
# First equilibrate the system (REDUCED)
print "Equilibrating system for 200 steps"  # Reduced from 1000
run             200

# --- Apply Gaussian heat source during discharge ---
print "Starting discharge phase: ${discharge_steps} steps (${discharge_time} ns)"

# Add this before discharge phase (REDUCED frequency)
dump            discharge all custom 2000 discharge.*.lammpstrj id type x y z c_csp

# Define the Gaussian heat distribution based on distance from center
variable        r atom sqrt((x-${center_x})^2+(y-${center_y})^2)
variable        heat_amount atom ${power_density}*exp(-${k_factor}*v_r^2)

# Apply the heat source to atoms in heating region with Kokkos acceleration
fix             add_heat heat_atoms addforce/kk 0.0 0.0 0.0 energy v_heat_amount

# Run the discharge phase
run             ${discharge_steps}

# Remove heat source after discharge
unfix           add_heat

# Run cooling phase
print "Starting cooling phase"
variable        cooling_steps equal ${total_steps}-${discharge_steps}
run             ${cooling_steps}

# --- Final analysis ---
compute         ke all ke/atom/kk
variable        temp_atom atom c_ke/(1.5*8.617e-5)

# Output final state
dump            2 all custom 1 final_state.lammpstrj &
                id type x y z c_csp v_temp_atom

# Print summary message
print "MD simulation of EDM on NiTi completed"
print "Discharge time: ${discharge_time} ns"
print "Total simulation time: ${total_time} ns"
print "Max temperature reached: $(max(c_temp_heat)) K"

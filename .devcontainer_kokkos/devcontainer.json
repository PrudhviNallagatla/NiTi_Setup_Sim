{
  "name": "NiTi Nanoparticle Simulation Environment",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  "runArgs": [
    "--gpus=all",
    "--ipc=host",
    "--shm-size=4g",
    "--ulimit",
    "memlock=-1:-1",
    "--security-opt",
    "seccomp=unconfined",
    "-e",
    "DISPLAY=${localEnv:DISPLAY}",
    "-v",
    "/tmp/.X11-unix:/tmp/.X11-unix"
  ],
  "forwardPorts": [8888, 8080, 8000, 6006, 8787, 3000, 8087],
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-toolsai.jupyter",
        "ms-vscode.cpptools",
        "ms-python.vscode-pylance",
        "yzhang.markdown-all-in-one",
        "bierner.markdown-preview-github-styles",
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "redhat.vscode-yaml",
        "thfriedrich.lammps",
        "tomoki1207.pdf",
        "mechatroner.rainbow-csv",
        "ms-toolsai.datawrangler",
        "visualstudioexptteam.vscodeintellicode",
        "streetsidesoftware.code-spell-checker",
        "gruntfuggly.todo-tree",
        "ms-azuretools.vscode-docker",
        "auchenberg.vscode-browser-preview"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/usr/bin/bash"
          }
        },
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.linting.enabled": true,
        "editor.formatOnSave": true,
        "remote.autoForwardPorts": true,
        "remote.restoreForwardedPorts": true,
        "jupyter.alwaysTrustNotebooks": true,
        "jupyter.interactiveWindowMode": "perFile",
        "files.eol": "\n",
        "files.insertFinalNewline": true
      }
    }
  },
  "remoteUser": "rimuru",
  "postCreateCommand": "bash -c 'echo \"Container ready! Setting up environment...\" && /opt/scripts/fix_line_endings.sh && /opt/scripts/copy_potentials.sh && sudo apt-get update && sudo apt-get install -y x11-apps mesa-utils && echo \"Testing OpenGL support:\" && glxinfo | grep \"OpenGL vendor\" || echo \"OpenGL not available - GUI visualization may not work\"'",
  "postStartCommand": "bash -c 'echo \"Running environment checks...\" && source /opt/scripts/detect_gpu.sh && echo \"⚙️ Line ending fix is available with command: fix-scripts\" && echo \"⚙️ Jupyter notebook available at: http://localhost:8888\"'",
  "mounts": [
    "source=${localWorkspaceFolder},target=/home/rimuru/workspace,type=bind,consistency=cached"
  ],
  "workspaceFolder": "/home/rimuru/workspace",
  "features": {
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    }
  }
}
